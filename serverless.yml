service: auction-service

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  architecture: arm64
  memorySize: 256
  timeout: 10
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'eu-west-1'}
  profile: ${opt:profile, 'vekaevdev'}
  apiGateway:
    minimumCompressionSize: 1024
  iam:
    role:
      statements:
        - ${file(serverless/iam/AuctionsTableIAM.yml):AuctionsTableIAM}
  environment:
    AWS_DB_REGION: ${self:provider.region}
    AWS_DB_PROFILE: ${self:provider.profile}
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
    AUCTIONS_TABLE_NAME: ${self:custom.AuctionsTable.name}
    NODE_OPTIONS: '--enable-source-maps --stack-trace-limit=1000'

package:
  individually: false
  patterns:
    - '!test/**'
    - '!.git/**'
    - '!.idea/**'
    - '!.jest/**'
    - '!.husky/**'
    - '!.github/**'
    - '!.serverless/**'
    - '!node_modules/.cache/**'
    - '!.coverage'
    - '!.eslintrc'
    - '!.prettierrc'
    - '!.gitignore'
    - '!.gitattributes'
    - '!.nvmrc'
    - '!.npmrc'
    - '!yarn.lock'
    - '!README.md'


functions:
  getAuctions:
    handler: src/functions/auctions.getAuctions
    events:
      - http:
          method: GET
          path: /auctions
  getAuction:
    handler: src/functions/auctions.getAuction
    events:
      - http:
          method: GET
          path: /auctions/{id}
  createAuction:
    handler: src/functions/auctions.createAuction
    events:
      - http:
          method: POST
          path: /auctions
  updateAuction:
    handler: src/functions/auctions.updateAuction
    events:
      - http:
          method: PATCH
          path: /auctions/{id}
  deleteAuction:
    handler: src/functions/auctions.deleteAuction
    events:
      - http:
          method: DELETE
          path: /auctions/{id}
  placeBid:
    handler: src/functions/auctions.placeBid
    events:
      - http:
          method: POST
          path: /auctions/{id}/bid
  processAuctions:
    handler: src/functions/auctions.processAuctions
    events:
      - http:
          method: POST
          path: /auctions/process

resources:
  Resources:
    AuctionsTable: ${file(serverless/resources/AuctionsTable.yml):AuctionsTable}

plugins:
  - serverless-auto-swagger
#  NOTE: use serverless-analyze-bundle-plugin with package.individually = true
#  and run with function name at the end
  - serverless-analyze-bundle-plugin
  - serverless-esbuild
  - serverless-offline
  - serverless-cloudside-plugin
  - serverless-prune-plugin

custom:
  AuctionsTable:
    name: !Ref AuctionsTable
    arn:  !GetAtt AuctionsTable.Arn
  esbuild:
    packager: yarn
    minify: true
    keepNames: true
    exclude: ['aws-sdk', '@aws-sdk/client-dynamodb', '@aws-sdk/util-dynamodb', '@aws-sdk/credential-providers']
    installExtraArgs: ['--max-old-space-size=4096']
    watch:
      pattern: ['src/**/*.ts']
  prune:
    automatic: true
    number: 1
  autoswagger:
    basePath: /${self:provider.stage}
    typefiles: []
